name: Orchestrate Workflows

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    steps:
      # Trigger Build Workflow
      - name: Trigger Build Workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "build.yml",
              ref: context.ref,
            });
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # Wait for Build Completion
      - name: Wait for Build Completion
        uses: actions/github-script@v6
        with:
          script: |
            const workflowName = "Build Go Code"; // Nome do workflow "build.yml"
            const checkStatus = async () => {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflowName,
                branch: context.ref.replace('refs/heads/', ''),
                event: "workflow_dispatch",
              });
              const latestRun = runs.data.workflow_runs[0];
              if (latestRun.conclusion === "success") return true;
              if (latestRun.conclusion === "failure") throw new Error("Build falhou.");
              return false;
            };
            let success = false;
            while (!success) {
              await new Promise((resolve) => setTimeout(resolve, 10000)); // Aguarda 10 segundos
              success = await checkStatus();
            }
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # Trigger Test Workflow
      - name: Trigger Test Workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "test.yml",
              ref: context.ref,
            });
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # Wait for Test Completion
      - name: Wait for Test Completion
        uses: actions/github-script@v6
        with:
          script: |
            const workflowName = "Test Go Code"; // Nome do workflow "test.yml"
            const checkStatus = async () => {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflowName,
                branch: context.ref.replace('refs/heads/', ''),
                event: "workflow_dispatch",
              });
              const latestRun = runs.data.workflow_runs[0];
              if (latestRun.conclusion === "success") return true;
              if (latestRun.conclusion === "failure") throw new Error("Test falhou.");
              return false;
            };
            let success = false;
            while (!success) {
              await new Promise((resolve) => setTimeout(resolve, 10000)); // Aguarda 10 segundos
              success = await checkStatus();
            }
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # Trigger Merge Workflow
      - name: Trigger Merge Workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "merge.yml",
              ref: context.ref,
            });
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
